package com.ataya.address.controller;

import com.ataya.address.service.AddressService;
import com.ataya.address.util.ApiResponse;
import io.swagger.v3.oas.annotations.Operation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/address/find")
public class FindAddressController {

    @Autowired
    private AddressService addressService;

    @GetMapping("/by-coordinates")
    @Operation(summary = "Get address by coordinates")
    public ResponseEntity<ApiResponse> getAddressByCoordinates(@RequestParam Double lat, @RequestParam Double lng) {
        return ResponseEntity.ok(addressService.getAddressByCoordinates(lat, lng));
    }
    @GetMapping("/by-tags")
    @Operation(summary = "Get addresses by tags")
    public ResponseEntity<ApiResponse> getAddressByTags(@RequestParam List<String> tags, @RequestParam(required = false) Integer page, @RequestParam(required = false) Integer size) {
        return ResponseEntity.ok(addressService.getAddressByTags(tags, page, size));
    }
    @GetMapping("/by-id/{id}")
    @Operation(summary = "Get address by id, id is the address id created by system once the address is created")
    public ResponseEntity<ApiResponse> getAddressById(@PathVariable String id) {
        return ResponseEntity.ok(addressService.getAddressById(id));
    }
    @GetMapping("/by-address-id/{addressId}")
    @Operation(summary = "Get address by addressId, addressId is id from the geocoder service")
    public ResponseEntity<ApiResponse> getAddressByAddressId(@PathVariable String addressId) {
        return ResponseEntity.ok(addressService.getAddressByAddressId(addressId));
    }

    @GetMapping("/nearby/by-coordinates")
    @Operation(summary = "Get nearby addresses by coordinates")
    public ResponseEntity<ApiResponse> getNearbyAddressesByCoordinates(@RequestParam Double lat, @RequestParam Double lng, @RequestParam Integer distance,@RequestParam(required = false) List<String> tags, @RequestParam(required = false) Integer page, @RequestParam(required = false) Integer size) {
        return ResponseEntity.ok(addressService.getNearbyAddressesByCoordinates(lat, lng, distance, tags, page, size));
    }

    @GetMapping("/nearby/by-id/{id}")
    @Operation(summary = "Get nearby addresses by id, id is the address id created by system once the address is created")
    public ResponseEntity<ApiResponse> getNearbyAddressesById(@PathVariable String id, @RequestParam Integer distance,@RequestParam(required = false) List<String> tags, @RequestParam(required = false) Integer page, @RequestParam(required = false) Integer size) {
        return ResponseEntity.ok(addressService.getNearbyAddressesById(id, distance, tags, page, size));
    }

    @GetMapping("/nearby/by-address-id/{addressId}")
    @Operation(summary = "Get nearby addresses by addressId, addressId is id from the geocoder service")
    public ResponseEntity<ApiResponse> getNearbyAddressesByAddressId(@PathVariable String addressId, @RequestParam Integer distance,@RequestParam(required = false) List<String> tags, @RequestParam(required = false) Integer page, @RequestParam(required = false) Integer size) {
        return ResponseEntity.ok(addressService.getNearbyAddressesByAddressId(addressId, distance, tags, page, size));
    }

    @GetMapping("/nearby")
    @Operation(
            summary = "Get nearby addresses",
            description = "Get nearby addresses by (coordinates or id(address entity id) or addressId(generated by geocoder service)), distance and tag/tags, " +
                    "if you provide coordinates, id or addressId, the other two parameters are not required, " +
                    "you can provide tags to filter the addresses, page and size are optional"
    )
    public ResponseEntity<ApiResponse> getNearbyAddresses(@RequestParam(required = false) Double lat, @RequestParam(required = false) Double lng, @RequestParam(required = false) String id, @RequestParam(required = false) String addressId, @RequestParam Integer distance, @RequestParam(required = false) List<String> tags, @RequestParam(required = false) Integer page, @RequestParam(required = false) Integer size) {
        return ResponseEntity.ok(addressService.getNearbyAddresses(lat, lng, id, addressId, distance, tags, page, size));
    }
}
